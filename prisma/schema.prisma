// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-arm64-openssl-3.0.x", "rhel-openssl-1.0.x", "linux-musl-openssl-3.0.x"]
}

// -------------------------------
// Change the env variable to "TEST_DATABASE_URL" to run tests.
// -------------------------------

datasource db {
    provider = "postgresql"
    url      = env("TEST_DATABASE_URL")
}

model Order {
    id          Int               @id @default(autoincrement())
    createdAt   DateTime          @default(now())
    status      OrderStatus
    totalAmount Float
    address     String
    products    ProductOnOrders[] @relation()
}

// model Stock {
//     id        Int     @id @default(autoincrement())
//     product   Product @relation(fields: [productId], references: [id])
//     quantity  Int
//     productId Int     @unique
// }

enum OrderStatus {
    NOT_STARTED
    READY_TO_SHIP
    SHIPPING
    DELIVERED
}

model Product {
    id     Int               @id @default(autoincrement())
    name   String
    price  Float
    orders ProductOnOrders[] @relation()
}

model ProductOnOrders {
    order     Order   @relation(fields: [orderId], references: [id])
    orderId   Int
    product   Product @relation(fields: [productId], references: [id])
    productId Int
    quantity  Int

    @@id([orderId, productId])
}
